type User @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  status: String
  ChatRooms: [ChatRoom] @manyToMany(relationName: "UserChatRoom")
  Messages: [Message] @hasMany(indexName: "byUser", fields: ["id"])
}

type Message @model @auth(rules: [{ allow: public }]) {
  id: ID!
  createdAt: AWSDateTime!
  text: String!
  chatRoomId: ID!
    @index(
      name: "byChatRoom"
      sortKeyFields: ["createdAt"]
      queryField: "listMessagesByChatRoom"
    )
  userId: ID! @index(name: "byUser")
}

type ChatRoom @model @auth(rules: [{ allow: public }]) {
  id: ID!
  Users: [User] @manyToMany(relationName: "UserChatRoom")
  Messages: [Message] @hasMany(indexName: "byChatRoom", fields: ["id"])
  LastMessage: Message @hasOne
}
